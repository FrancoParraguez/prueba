version: '3.8'

services:
  # Base de datos MySQL en Docker
  mysql:
    image: mysql:8.0
    container_name: plate-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: plate_verification
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Backend Node.js
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: plate-backend
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=plate_verification
      - DB_USER=root
      - DB_PASSWORD=password
      - JWT_SECRET=your_jwt_secret_here_change_in_production
      - PLATE_RECOGNIZER_API_KEY=your_api_key_here
      - PORT=5000
      - NODE_ENV=development
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    command: sh -c "npm install && npm run dev"

 # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: plate-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://backend:5000/api

    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  mysql_data:
